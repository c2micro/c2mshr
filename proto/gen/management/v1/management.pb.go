// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: management/v1/management.proto

package managementv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operator сообщение, в котором хранятся данные об отдельном операторе
type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] имя оператора
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// access токен оператора
	Token *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// время последней активности оператора
	Last *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	mi := &file_management_v1_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{0}
}

func (x *Operator) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Operator) GetToken() *wrapperspb.StringValue {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Operator) GetLast() *timestamppb.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

// Listener сообщение, в котором хранятся данные об отдельном листенере
type Listener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] ID листенера
	Lid int64 `protobuf:"varint,1,opt,name=lid,proto3" json:"lid,omitempty"`
	// access токен листенера
	Token *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// имя листенера
	Name *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// IP адрес листенера
	Ip *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	// порт листенера
	Port *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	// время последней активности листенера
	Last *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *Listener) Reset() {
	*x = Listener{}
	mi := &file_management_v1_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{1}
}

func (x *Listener) GetLid() int64 {
	if x != nil {
		return x.Lid
	}
	return 0
}

func (x *Listener) GetToken() *wrapperspb.StringValue {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Listener) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Listener) GetIp() *wrapperspb.StringValue {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *Listener) GetPort() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Listener) GetLast() *timestamppb.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

// --> GetOperators
type GetOperatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOperatorsRequest) Reset() {
	*x = GetOperatorsRequest{}
	mi := &file_management_v1_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorsRequest) ProtoMessage() {}

func (x *GetOperatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorsRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorsRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{2}
}

type GetOperatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operators []*Operator `protobuf:"bytes,1,rep,name=operators,proto3" json:"operators,omitempty"`
}

func (x *GetOperatorsResponse) Reset() {
	*x = GetOperatorsResponse{}
	mi := &file_management_v1_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorsResponse) ProtoMessage() {}

func (x *GetOperatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorsResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorsResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{3}
}

func (x *GetOperatorsResponse) GetOperators() []*Operator {
	if x != nil {
		return x.Operators
	}
	return nil
}

// --> NewOperator
type NewOperatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] имя оператора
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *NewOperatorRequest) Reset() {
	*x = NewOperatorRequest{}
	mi := &file_management_v1_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOperatorRequest) ProtoMessage() {}

func (x *NewOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOperatorRequest.ProtoReflect.Descriptor instead.
func (*NewOperatorRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{4}
}

func (x *NewOperatorRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type NewOperatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator *Operator `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *NewOperatorResponse) Reset() {
	*x = NewOperatorResponse{}
	mi := &file_management_v1_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOperatorResponse) ProtoMessage() {}

func (x *NewOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOperatorResponse.ProtoReflect.Descriptor instead.
func (*NewOperatorResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{5}
}

func (x *NewOperatorResponse) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

// --> RevokeOperator
type RevokeOperatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] имя оператора
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *RevokeOperatorRequest) Reset() {
	*x = RevokeOperatorRequest{}
	mi := &file_management_v1_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOperatorRequest) ProtoMessage() {}

func (x *RevokeOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOperatorRequest.ProtoReflect.Descriptor instead.
func (*RevokeOperatorRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{6}
}

func (x *RevokeOperatorRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RevokeOperatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeOperatorResponse) Reset() {
	*x = RevokeOperatorResponse{}
	mi := &file_management_v1_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeOperatorResponse) ProtoMessage() {}

func (x *RevokeOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeOperatorResponse.ProtoReflect.Descriptor instead.
func (*RevokeOperatorResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{7}
}

// --> RegenerateOperator
type RegenerateOperatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] имя оператора
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *RegenerateOperatorRequest) Reset() {
	*x = RegenerateOperatorRequest{}
	mi := &file_management_v1_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateOperatorRequest) ProtoMessage() {}

func (x *RegenerateOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateOperatorRequest.ProtoReflect.Descriptor instead.
func (*RegenerateOperatorRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{8}
}

func (x *RegenerateOperatorRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RegenerateOperatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator *Operator `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *RegenerateOperatorResponse) Reset() {
	*x = RegenerateOperatorResponse{}
	mi := &file_management_v1_management_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateOperatorResponse) ProtoMessage() {}

func (x *RegenerateOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateOperatorResponse.ProtoReflect.Descriptor instead.
func (*RegenerateOperatorResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{9}
}

func (x *RegenerateOperatorResponse) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

// --> GetListeners
type GetListenersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetListenersRequest) Reset() {
	*x = GetListenersRequest{}
	mi := &file_management_v1_management_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListenersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenersRequest) ProtoMessage() {}

func (x *GetListenersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenersRequest.ProtoReflect.Descriptor instead.
func (*GetListenersRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{10}
}

type GetListenersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listeners []*Listener `protobuf:"bytes,1,rep,name=listeners,proto3" json:"listeners,omitempty"`
}

func (x *GetListenersResponse) Reset() {
	*x = GetListenersResponse{}
	mi := &file_management_v1_management_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListenersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenersResponse) ProtoMessage() {}

func (x *GetListenersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenersResponse.ProtoReflect.Descriptor instead.
func (*GetListenersResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{11}
}

func (x *GetListenersResponse) GetListeners() []*Listener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

// --> NewListener
type NewListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewListenerRequest) Reset() {
	*x = NewListenerRequest{}
	mi := &file_management_v1_management_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewListenerRequest) ProtoMessage() {}

func (x *NewListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewListenerRequest.ProtoReflect.Descriptor instead.
func (*NewListenerRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{12}
}

type NewListenerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener *Listener `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
}

func (x *NewListenerResponse) Reset() {
	*x = NewListenerResponse{}
	mi := &file_management_v1_management_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewListenerResponse) ProtoMessage() {}

func (x *NewListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewListenerResponse.ProtoReflect.Descriptor instead.
func (*NewListenerResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{13}
}

func (x *NewListenerResponse) GetListener() *Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

// --> RevokeListener
type RevokeListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] ID листенера
	Lid int64 `protobuf:"varint,1,opt,name=lid,proto3" json:"lid,omitempty"`
}

func (x *RevokeListenerRequest) Reset() {
	*x = RevokeListenerRequest{}
	mi := &file_management_v1_management_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeListenerRequest) ProtoMessage() {}

func (x *RevokeListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeListenerRequest.ProtoReflect.Descriptor instead.
func (*RevokeListenerRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{14}
}

func (x *RevokeListenerRequest) GetLid() int64 {
	if x != nil {
		return x.Lid
	}
	return 0
}

type RevokeListenerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeListenerResponse) Reset() {
	*x = RevokeListenerResponse{}
	mi := &file_management_v1_management_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeListenerResponse) ProtoMessage() {}

func (x *RevokeListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeListenerResponse.ProtoReflect.Descriptor instead.
func (*RevokeListenerResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{15}
}

// --> RegenerateListener
type RegenerateListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [ОБЯЗАТЕЛЬНОЕ] ID листенера
	Lid int64 `protobuf:"varint,1,opt,name=lid,proto3" json:"lid,omitempty"`
}

func (x *RegenerateListenerRequest) Reset() {
	*x = RegenerateListenerRequest{}
	mi := &file_management_v1_management_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateListenerRequest) ProtoMessage() {}

func (x *RegenerateListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateListenerRequest.ProtoReflect.Descriptor instead.
func (*RegenerateListenerRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{16}
}

func (x *RegenerateListenerRequest) GetLid() int64 {
	if x != nil {
		return x.Lid
	}
	return 0
}

type RegenerateListenerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener *Listener `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
}

func (x *RegenerateListenerResponse) Reset() {
	*x = RegenerateListenerResponse{}
	mi := &file_management_v1_management_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateListenerResponse) ProtoMessage() {}

func (x *RegenerateListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_management_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateListenerResponse.ProtoReflect.Descriptor instead.
func (*RegenerateListenerResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_management_proto_rawDescGZIP(), []int{17}
}

func (x *RegenerateListenerResponse) GetListener() *Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

var File_management_v1_management_proto protoreflect.FileDescriptor

var file_management_v1_management_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8a, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a,
	0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x92, 0x02,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x30, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6c, 0x61,
	0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x4e, 0x65,
	0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51,
	0x0a, 0x1a, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a,
	0x13, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x15, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6c, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x0a, 0x19, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x69, 0x64, 0x22, 0x51, 0x0a,
	0x1a, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x32, 0x85, 0x06, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x21,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x12, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x32, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x63,
	0x32, 0x6d, 0x73, 0x68, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_management_v1_management_proto_rawDescOnce sync.Once
	file_management_v1_management_proto_rawDescData = file_management_v1_management_proto_rawDesc
)

func file_management_v1_management_proto_rawDescGZIP() []byte {
	file_management_v1_management_proto_rawDescOnce.Do(func() {
		file_management_v1_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_management_v1_management_proto_rawDescData)
	})
	return file_management_v1_management_proto_rawDescData
}

var file_management_v1_management_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_management_v1_management_proto_goTypes = []any{
	(*Operator)(nil),                   // 0: management.v1.Operator
	(*Listener)(nil),                   // 1: management.v1.Listener
	(*GetOperatorsRequest)(nil),        // 2: management.v1.GetOperatorsRequest
	(*GetOperatorsResponse)(nil),       // 3: management.v1.GetOperatorsResponse
	(*NewOperatorRequest)(nil),         // 4: management.v1.NewOperatorRequest
	(*NewOperatorResponse)(nil),        // 5: management.v1.NewOperatorResponse
	(*RevokeOperatorRequest)(nil),      // 6: management.v1.RevokeOperatorRequest
	(*RevokeOperatorResponse)(nil),     // 7: management.v1.RevokeOperatorResponse
	(*RegenerateOperatorRequest)(nil),  // 8: management.v1.RegenerateOperatorRequest
	(*RegenerateOperatorResponse)(nil), // 9: management.v1.RegenerateOperatorResponse
	(*GetListenersRequest)(nil),        // 10: management.v1.GetListenersRequest
	(*GetListenersResponse)(nil),       // 11: management.v1.GetListenersResponse
	(*NewListenerRequest)(nil),         // 12: management.v1.NewListenerRequest
	(*NewListenerResponse)(nil),        // 13: management.v1.NewListenerResponse
	(*RevokeListenerRequest)(nil),      // 14: management.v1.RevokeListenerRequest
	(*RevokeListenerResponse)(nil),     // 15: management.v1.RevokeListenerResponse
	(*RegenerateListenerRequest)(nil),  // 16: management.v1.RegenerateListenerRequest
	(*RegenerateListenerResponse)(nil), // 17: management.v1.RegenerateListenerResponse
	(*wrapperspb.StringValue)(nil),     // 18: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),      // 19: google.protobuf.Timestamp
	(*wrapperspb.UInt32Value)(nil),     // 20: google.protobuf.UInt32Value
}
var file_management_v1_management_proto_depIdxs = []int32{
	18, // 0: management.v1.Operator.token:type_name -> google.protobuf.StringValue
	19, // 1: management.v1.Operator.last:type_name -> google.protobuf.Timestamp
	18, // 2: management.v1.Listener.token:type_name -> google.protobuf.StringValue
	18, // 3: management.v1.Listener.name:type_name -> google.protobuf.StringValue
	18, // 4: management.v1.Listener.ip:type_name -> google.protobuf.StringValue
	20, // 5: management.v1.Listener.port:type_name -> google.protobuf.UInt32Value
	19, // 6: management.v1.Listener.last:type_name -> google.protobuf.Timestamp
	0,  // 7: management.v1.GetOperatorsResponse.operators:type_name -> management.v1.Operator
	0,  // 8: management.v1.NewOperatorResponse.operator:type_name -> management.v1.Operator
	0,  // 9: management.v1.RegenerateOperatorResponse.operator:type_name -> management.v1.Operator
	1,  // 10: management.v1.GetListenersResponse.listeners:type_name -> management.v1.Listener
	1,  // 11: management.v1.NewListenerResponse.listener:type_name -> management.v1.Listener
	1,  // 12: management.v1.RegenerateListenerResponse.listener:type_name -> management.v1.Listener
	2,  // 13: management.v1.ManagementService.GetOperators:input_type -> management.v1.GetOperatorsRequest
	4,  // 14: management.v1.ManagementService.NewOperator:input_type -> management.v1.NewOperatorRequest
	6,  // 15: management.v1.ManagementService.RevokeOperator:input_type -> management.v1.RevokeOperatorRequest
	8,  // 16: management.v1.ManagementService.RegenerateOperator:input_type -> management.v1.RegenerateOperatorRequest
	10, // 17: management.v1.ManagementService.GetListeners:input_type -> management.v1.GetListenersRequest
	12, // 18: management.v1.ManagementService.NewListener:input_type -> management.v1.NewListenerRequest
	14, // 19: management.v1.ManagementService.RevokeListener:input_type -> management.v1.RevokeListenerRequest
	16, // 20: management.v1.ManagementService.RegenerateListener:input_type -> management.v1.RegenerateListenerRequest
	3,  // 21: management.v1.ManagementService.GetOperators:output_type -> management.v1.GetOperatorsResponse
	5,  // 22: management.v1.ManagementService.NewOperator:output_type -> management.v1.NewOperatorResponse
	7,  // 23: management.v1.ManagementService.RevokeOperator:output_type -> management.v1.RevokeOperatorResponse
	9,  // 24: management.v1.ManagementService.RegenerateOperator:output_type -> management.v1.RegenerateOperatorResponse
	11, // 25: management.v1.ManagementService.GetListeners:output_type -> management.v1.GetListenersResponse
	13, // 26: management.v1.ManagementService.NewListener:output_type -> management.v1.NewListenerResponse
	15, // 27: management.v1.ManagementService.RevokeListener:output_type -> management.v1.RevokeListenerResponse
	17, // 28: management.v1.ManagementService.RegenerateListener:output_type -> management.v1.RegenerateListenerResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_management_v1_management_proto_init() }
func file_management_v1_management_proto_init() {
	if File_management_v1_management_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_management_v1_management_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_management_v1_management_proto_goTypes,
		DependencyIndexes: file_management_v1_management_proto_depIdxs,
		MessageInfos:      file_management_v1_management_proto_msgTypes,
	}.Build()
	File_management_v1_management_proto = out.File
	file_management_v1_management_proto_rawDesc = nil
	file_management_v1_management_proto_goTypes = nil
	file_management_v1_management_proto_depIdxs = nil
}
